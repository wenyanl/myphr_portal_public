{"ast":null,"code":"import _classCallCheck from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wenyanli/Desktop/MyPHR_Portal/src/components/autoAddress/AddressForm.js\";\nimport React, { Component } from \"react\";\nimport AddressSuggest from \"./AddressSuggest\";\nimport AddressInput from \"./AddressInput\";\nimport axios from \"axios\";\nvar APP_ID_HERE = \"Fz8mRRSVvIpzxV6B1qa1\";\nvar APP_CODE_HERE = \"miB6oUEV_kPBGp7CQTQTAg\";\n\nvar AddressForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddressForm, _Component);\n\n  function AddressForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddressForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddressForm).call(this, props));\n    _this.state = _this.getInitialState(); // User has entered something in the address bar\n\n    _this.onQuery = _this.onQuery.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has entered something in an address field\n\n    _this.onAddressChange = _this.onAddressChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has clicked the check button\n\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has clicked the clear button\n\n    _this.onClear = _this.onClear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddressForm, [{\n    key: \"onQuery\",\n    value: function onQuery(evt) {\n      var query = evt.target.value;\n\n      if (!query.length > 0) {\n        this.setState(this.getInitialState());\n        return;\n      }\n\n      var self = this;\n      axios.get(\"https://autocomplete.geocoder.api.here.com/6.2/suggest.json\", {\n        params: {\n          app_id: APP_ID_HERE,\n          app_code: APP_CODE_HERE,\n          query: query,\n          maxresults: 1\n        }\n      }).then(function (response) {\n        if (response.data.suggestions.length > 0) {\n          var id = response.data.suggestions[0].locationId;\n          var address = response.data.suggestions[0].address;\n          self.setState({\n            address: address,\n            query: query,\n            locationId: id\n          });\n        } else {\n          var state = self.getInitialState();\n          self.setState(state);\n        }\n      });\n    }\n  }, {\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      return {\n        address: {\n          street: \"\",\n          city: \"\",\n          state: \"\",\n          postalCode: \"\",\n          country: \"\"\n        },\n        query: \"\",\n        locationId: \"\",\n        isChecked: false,\n        coords: {}\n      };\n    }\n  }, {\n    key: \"onClear\",\n    value: function onClear(evt) {\n      var state = this.getInitialState();\n      this.setState(state);\n    }\n  }, {\n    key: \"onAddressChange\",\n    value: function onAddressChange(evt) {\n      var id = evt.target.id;\n      var val = evt.target.value;\n      var state = this.state;\n      state.address[id] = val;\n      this.setState(state);\n    }\n  }, {\n    key: \"onCheck\",\n    value: function onCheck(evt) {\n      var params = {\n        app_id: APP_ID_HERE,\n        app_code: APP_CODE_HERE\n      };\n\n      if (this.state.locationId.length > 0) {\n        params[\"locationId\"] = this.state.locationId;\n      } else {\n        params[\"searchtext\"] = this.state.address.street + this.state.address.city + this.state.address.state + this.state.address.postalCode + this.state.address.country;\n      }\n\n      var self = this;\n      axios.get(\"https://geocoder.api.here.com/6.2/geocode.json\", {\n        params: params\n      }).then(function (response) {\n        var view = response.data.Response.View;\n\n        if (view.length > 0 && view[0].Result.length > 0) {\n          var location = view[0].Result[0].Location;\n          self.setState({\n            isChecked: \"true\",\n            locationId: \"\",\n            query: location.Address.Label,\n            address: {\n              street: location.Address.HouseNumber + \" \" + location.Address.Street,\n              city: location.Address.City,\n              state: location.Address.State,\n              postalCode: location.Address.PostalCode,\n              country: location.Address.Country\n            },\n            coords: {\n              lat: location.DisplayPosition.Latitude,\n              lon: location.DisplayPosition.Longitude\n            }\n          });\n        } else {\n          self.setState({\n            isChecked: true,\n            coords: null\n          });\n        }\n      }).catch(function (error) {\n        console.log(\"caught failed query\");\n        self.setState({\n          isChecked: true,\n          coords: null\n        });\n      });\n    }\n  }, {\n    key: \"alert\",\n    value: function alert() {\n      if (!this.state.isChecked) {\n        return;\n      }\n\n      if (this.state.coords === null) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-warning\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, \"Invalid.\"), \" The address is not recognized.\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"alert alert-success\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Valid Address.\"), \" Location is \", this.state.coords.lat, \",\", \" \", this.state.coords.lon, \".\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var result = this.alert();\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(AddressSuggest, {\n        query: this.state.query,\n        onChange: this.onQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(AddressInput, {\n        street: this.state.address.street,\n        city: this.state.address.city,\n        state: this.state.address.state,\n        postalCode: this.state.address.postalCode,\n        country: this.state.address.country,\n        onChange: this.onAddressChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), result, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Check\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-secondary\",\n        onClick: this.onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Clear\"));\n    }\n  }]);\n\n  return AddressForm;\n}(Component);\n\nexport default AddressForm;","map":{"version":3,"sources":["/Users/wenyanli/Desktop/MyPHR_Portal/src/components/autoAddress/AddressForm.js"],"names":["React","Component","AddressSuggest","AddressInput","axios","APP_ID_HERE","APP_CODE_HERE","AddressForm","props","state","getInitialState","onQuery","bind","onAddressChange","onCheck","onClear","evt","query","target","value","length","setState","self","get","params","app_id","app_code","maxresults","then","response","data","suggestions","id","locationId","address","street","city","postalCode","country","isChecked","coords","val","view","Response","View","Result","location","Location","Address","Label","HouseNumber","Street","City","State","PostalCode","Country","lat","DisplayPosition","Latitude","lon","Longitude","catch","error","console","log","result","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AddressSuggest from \"./AddressSuggest\";\nimport AddressInput from \"./AddressInput\";\nimport axios from \"axios\";\n\nconst APP_ID_HERE = \"Fz8mRRSVvIpzxV6B1qa1\";\nconst APP_CODE_HERE = \"miB6oUEV_kPBGp7CQTQTAg\";\n\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getInitialState();\n\n    // User has entered something in the address bar\n    this.onQuery = this.onQuery.bind(this);\n    // User has entered something in an address field\n    this.onAddressChange = this.onAddressChange.bind(this);\n    // User has clicked the check button\n    this.onCheck = this.onCheck.bind(this);\n    // User has clicked the clear button\n    this.onClear = this.onClear.bind(this);\n  }\n\n  onQuery(evt) {\n    const query = evt.target.value;\n\n    if (!query.length > 0) {\n      this.setState(this.getInitialState());\n      return;\n    }\n\n    const self = this;\n    axios\n      .get(\"https://autocomplete.geocoder.api.here.com/6.2/suggest.json\", {\n        params: {\n          app_id: APP_ID_HERE,\n          app_code: APP_CODE_HERE,\n          query: query,\n          maxresults: 1\n        }\n      })\n      .then(function(response) {\n        if (response.data.suggestions.length > 0) {\n          const id = response.data.suggestions[0].locationId;\n          const address = response.data.suggestions[0].address;\n          self.setState({\n            address: address,\n            query: query,\n            locationId: id\n          });\n        } else {\n          const state = self.getInitialState();\n          self.setState(state);\n        }\n      });\n  }\n\n  getInitialState() {\n    return {\n      address: {\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        postalCode: \"\",\n        country: \"\"\n      },\n      query: \"\",\n      locationId: \"\",\n      isChecked: false,\n      coords: {}\n    };\n  }\n\n  onClear(evt) {\n    const state = this.getInitialState();\n    this.setState(state);\n  }\n\n  onAddressChange(evt) {\n    const id = evt.target.id;\n    const val = evt.target.value;\n\n    let state = this.state;\n    state.address[id] = val;\n    this.setState(state);\n  }\n\n  onCheck(evt) {\n    let params = {\n      app_id: APP_ID_HERE,\n      app_code: APP_CODE_HERE\n    };\n\n    if (this.state.locationId.length > 0) {\n      params[\"locationId\"] = this.state.locationId;\n    } else {\n      params[\"searchtext\"] =\n        this.state.address.street +\n        this.state.address.city +\n        this.state.address.state +\n        this.state.address.postalCode +\n        this.state.address.country;\n    }\n\n    const self = this;\n    axios\n      .get(\"https://geocoder.api.here.com/6.2/geocode.json\", { params: params })\n      .then(function(response) {\n        const view = response.data.Response.View;\n        if (view.length > 0 && view[0].Result.length > 0) {\n          const location = view[0].Result[0].Location;\n\n          self.setState({\n            isChecked: \"true\",\n            locationId: \"\",\n            query: location.Address.Label,\n            address: {\n              street:\n                location.Address.HouseNumber + \" \" + location.Address.Street,\n              city: location.Address.City,\n              state: location.Address.State,\n              postalCode: location.Address.PostalCode,\n              country: location.Address.Country\n            },\n            coords: {\n              lat: location.DisplayPosition.Latitude,\n              lon: location.DisplayPosition.Longitude\n            }\n          });\n        } else {\n          self.setState({\n            isChecked: true,\n            coords: null\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(\"caught failed query\");\n        self.setState({\n          isChecked: true,\n          coords: null\n        });\n      });\n  }\n\n  alert() {\n    if (!this.state.isChecked) {\n      return;\n    }\n\n    if (this.state.coords === null) {\n      return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <b>Invalid.</b> The address is not recognized.\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n          <b>Valid Address.</b> Location is {this.state.coords.lat},{\" \"}\n          {this.state.coords.lon}.\n        </div>\n      );\n    }\n  }\n\n  render() {\n    let result = this.alert();\n    return (\n      <div className=\"container\">\n        <AddressSuggest query={this.state.query} onChange={this.onQuery} />\n        <AddressInput\n          street={this.state.address.street}\n          city={this.state.address.city}\n          state={this.state.address.state}\n          postalCode={this.state.address.postalCode}\n          country={this.state.address.country}\n          onChange={this.onAddressChange}\n        />\n        <br />\n        {result}\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={this.onCheck}\n        >\n          Check\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-secondary\"\n          onClick={this.onClear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddressForm;\n"]},"metadata":{},"sourceType":"module"}