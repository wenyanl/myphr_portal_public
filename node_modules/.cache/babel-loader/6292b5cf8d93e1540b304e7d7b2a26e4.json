{"ast":null,"code":"import _defineProperty from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wenyanli/Desktop/MyPHR_Portal/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wenyanli/Desktop/MyPHR_Portal/src/components/Edit/editContact.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport { userService } from \"../../service\";\nimport { ButtonToolbar, Button, Form, InputGroup, Col } from \"react-bootstrap\";\nimport AddressForm from \"../autoAddress/AddressForm\";\nimport AddressSuggest from \"../autoAddress/AddressSuggest\";\nimport AddressInput from \"../autoAddress/AddressInput\";\nimport axios from \"axios\";\nimport { Field, formInputData, formValidation } from \"reactjs-input-validator\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/dist/style.css\";\nvar APP_ID_HERE = \"Fz8mRRSVvIpzxV6B1qa1\";\nvar APP_CODE_HERE = \"miB6oUEV_kPBGp7CQTQTAg\";\nvar clientToEdit = JSON.parse(localStorage.getItem(\"contactInfo\"));\n/*edit components\n *auto complete addresses\n *phone number and email validators\n\n validate all forms when clicking save (before save)\n */\n\nvar EditContact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditContact, _React$Component);\n\n  function EditContact(props, context) {\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditContact).call(this, props, context));\n    _this.TOKEN = JSON.parse(localStorage.getItem(\"oneUser\")).token;\n    _this.ID = JSON.parse(localStorage.getItem(\"oneUser\")).client_id;\n    _this.state = _this.getInitialState();\n    _this.editContact = _this.editContact.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editCancel = _this.editCancel.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has entered something in the address bar\n\n    _this.onQuery = _this.onQuery.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has entered something in an address field\n\n    _this.onAddressChange = _this.onAddressChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has clicked the save button\n\n    _this.onCheck = _this.onCheck.bind(_assertThisInitialized(_assertThisInitialized(_this))); // User has clicked the clear button\n\n    _this.onClear = _this.onClear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePhoneChange = _this.handlePhoneChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOAChange = _this.handleOAChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMAChange = _this.handleMAChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHPChange = _this.handleHPChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHAChange = _this.handleHAChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEChange = _this.handleEChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditContact, [{\n    key: \"getInitialState\",\n    value: function getInitialState() {\n      var _ref;\n\n      return _ref = {\n        address: {\n          street_number: \"\",\n          city: \"\",\n          state: \"\",\n          postal_code: \"\",\n          country: \"\"\n        },\n        isLoading: true,\n        client: {}\n      }, _defineProperty(_ref, \"address\", {}), _defineProperty(_ref, \"isEditContact\", false), _defineProperty(_ref, \"validated\", false), _defineProperty(_ref, \"query\", \"\"), _defineProperty(_ref, \"locationId\", \"\"), _defineProperty(_ref, \"isChecked\", false), _defineProperty(_ref, \"coords\", {}), _defineProperty(_ref, \"data\", {}), _defineProperty(_ref, \"phoneInfo\", clientToEdit[1][1]), _defineProperty(_ref, \"emailInfo\", clientToEdit[2][1]), _defineProperty(_ref, \"addressInfo\", clientToEdit[0][1]), _defineProperty(_ref, \"homeAddress\", {}), _defineProperty(_ref, \"mailingAddress\", {}), _defineProperty(_ref, \"otherAddress\", {}), _defineProperty(_ref, \"homePhone\", {}), _defineProperty(_ref, \"cellPhone\", {}), _defineProperty(_ref, \"newEmail\", {}), _defineProperty(_ref, \"newHA\", {}), _defineProperty(_ref, \"newMA\", {}), _defineProperty(_ref, \"newOA\", {}), _defineProperty(_ref, \"newHP\", {}), _defineProperty(_ref, \"newCP\", {}), _defineProperty(_ref, \"errors\", {}), _ref;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ha = this.state.addressInfo.filter(function (word) {\n        return word.type == \"home\";\n      });\n\n      if (ha.length != 0) {\n        this.setState({\n          homeAddress: ha[0].address,\n          newHA: ha[0].address\n        });\n      } else {\n        this.setState({\n          homeAddress: ha[0],\n          newHA: ha[0]\n        });\n      }\n\n      var ma = this.state.addressInfo.filter(function (word) {\n        return word.type == \"mailing\";\n      });\n\n      if (ma.length != 0) {\n        this.setState({\n          mailingAddress: ma[0].address,\n          newMA: ma[0].address\n        });\n      } else {\n        this.setState({\n          mailingAddress: ma[0],\n          newMA: ma[0]\n        });\n      }\n\n      var oa = this.state.addressInfo.filter(function (word) {\n        return word.type == \"other\";\n      });\n\n      if (oa.length != 0) {\n        this.setState({\n          otherAddress: oa[0].address,\n          newOA: oa[0].address\n        });\n      } else {\n        this.setState({\n          otherAddress: oa[0],\n          newOA: oa[0]\n        });\n      }\n\n      var cp = this.state.phoneInfo.filter(function (word) {\n        return word.type == \"cell\";\n      });\n\n      if (cp.length != 0) {\n        this.setState({\n          cellPhone: \"+\" + cp[0].country_code + \" \" + cp[0].number,\n          newCP: \"+\" + cp[0].country_code + \" \" + cp[0].number\n        }); ///IF Differnet code????????\n      } else {\n        this.setState({\n          cellPhone: cp[0],\n          newCP: cp[0]\n        }); ///IF Differnet code????????\n      }\n\n      var hp = this.state.phoneInfo.filter(function (word) {\n        return word.type == \"home\";\n      });\n\n      if (hp.length != 0) {\n        this.setState({\n          homePhone: \"+\" + hp[0].country_code + \" \" + hp[0].number,\n          newHP: \"+\" + hp[0].country_code + \" \" + hp[0].number\n        });\n      } else {\n        this.setState({\n          homePhone: hp[0],\n          newHP: hp[0]\n        });\n      }\n\n      this.setState({\n        newEmail: this.state.emailInfo\n      });\n    }\n  }, {\n    key: \"editCancel\",\n    value: function editCancel() {\n      this.setState({\n        isEditContact: false\n      });\n    } //disabled now\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.setState({\n        validated: true\n      });\n    } //Address Query\n\n  }, {\n    key: \"onQuery\",\n    value: function onQuery(event) {\n      var query = event.target.value;\n\n      if (!query.length > 0) {\n        this.setState(this.getInitialState());\n        return;\n      }\n\n      var self = this;\n      axios.get(\"https://autocomplete.geocoder.api.here.com/6.2/suggest.json\", {\n        params: {\n          app_id: APP_ID_HERE,\n          app_code: APP_CODE_HERE,\n          query: query,\n          maxresults: 1\n        }\n      }).then(function (response) {\n        if (response.data.suggestions.length > 0) {\n          var id = response.data.suggestions[0].locationId;\n          var address = response.data.suggestions[0].address;\n          self.setState({\n            address: address,\n            query: query,\n            locationId: id\n          });\n        } else {\n          var state = self.getInitialState();\n          self.setState(state);\n        }\n      });\n    }\n  }, {\n    key: \"editContact\",\n    value: function editContact() {\n      this.setState({\n        isEditContact: true\n      });\n    } //disabled now\n\n  }, {\n    key: \"onClear\",\n    value: function onClear(evt) {\n      var state = this.getInitialState();\n      this.setState(state);\n    }\n  }, {\n    key: \"onAddressChange\",\n    value: function onAddressChange(evt) {\n      var id = evt.target.id;\n      var val = evt.target.value;\n      var state = this.state;\n      state.address[id] = val;\n      this.setState(state);\n    } //handle email\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, inputValue, inputName, validationState, isRequired) {\n      var value = event && event.target.value || inputValue;\n      var data = this.state.data;\n      data[inputName] = {\n        value: value,\n        validation: validationState,\n        isRequired: isRequired\n      };\n      this.setState({\n        data: data\n      }); // if you want access to your form data\n\n      var formData = formInputData(this.state.data); // eslint-disable-line no-unused-vars\n      // tells you if the entire form validation is true or false\n\n      var isFormValid = formValidation(this.state.data); // eslint-disable-line no-unused-vars\n    } //handle phone number change\n\n  }, {\n    key: \"handlePhoneChange\",\n    value: function handlePhoneChange(value) {\n      this.setState({\n        newCP: value\n      });\n    }\n  }, {\n    key: \"handleHPChange\",\n    value: function handleHPChange(value) {\n      this.setState({\n        newHP: value\n      });\n    } //handle addresses change\n\n  }, {\n    key: \"handleHAChange\",\n    value: function handleHAChange(event) {\n      this.setState({\n        newHA: event.target.value\n      });\n    }\n  }, {\n    key: \"handleMAChange\",\n    value: function handleMAChange(event) {\n      this.setState({\n        newMA: event.target.value\n      });\n    }\n  }, {\n    key: \"handleOAChange\",\n    value: function handleOAChange(event) {\n      this.setState({\n        newOA: event.target.value\n      });\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var email = this.state.newEmail;\n      var errors = {};\n      var formIsValid = true; //Email\n\n      if (!email) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email cannot be empty\";\n      }\n\n      if (typeof email !== \"undefined\") {\n        var lastAtPos = email.lastIndexOf(\"@\");\n        var lastDotPos = email.lastIndexOf(\".\");\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && email.indexOf(\"@@\") == -1 && lastDotPos > 2 && email.length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleEChange\",\n    value: function handleEChange(e) {\n      this.setState({\n        newEmail: e.target.value\n      });\n    }\n  }, {\n    key: \"onCheck\",\n    //when validation (clicking save button)\n    value: function onCheck(event) {\n      var params = {\n        app_id: APP_ID_HERE,\n        app_code: APP_CODE_HERE\n      };\n\n      if (this.state.locationId.length > 0) {\n        params[\"locationId\"] = this.state.locationId;\n      } else {\n        params[\"searchtext\"] = this.state.address.street_number + this.state.address.city + this.state.address.state + this.state.address.postal_code + this.state.address.country;\n      }\n\n      var self = this;\n      axios.get(\"https://geocoder.api.here.com/6.2/geocode.json\", {\n        params: params\n      }).then(function (response) {\n        var view = response.data.Response.View;\n\n        if (view.length > 0 && view[0].Result.length > 0) {\n          var location = view[0].Result[0].Location;\n          self.setState({\n            isChecked: \"true\",\n            locationId: \"\",\n            query: location.Address.Label,\n            address: {\n              street: location.Address.HouseNumber + \" \" + location.Address.Street,\n              city: location.Address.City,\n              state: location.Address.State,\n              postalCode: location.Address.PostalCode,\n              country: location.Address.Country\n            },\n            coords: {\n              lat: location.DisplayPosition.Latitude,\n              lon: location.DisplayPosition.Longitude\n            }\n          });\n        } else {\n          self.setState({\n            isChecked: true,\n            coords: null\n          });\n        }\n      }).catch(function (error) {\n        console.log(\"caught failed query\");\n        self.setState({\n          isChecked: true,\n          coords: null\n        });\n      }); //validate email form\n\n      event.preventDefault();\n      var isFormValid = formValidation(this.state.data);\n\n      if (isFormValid) {\n        // do anything including ajax calls\n        this.setState({\n          callAPI: true\n        });\n      } else {\n        this.setState({\n          callAPI: true,\n          shouldValidateInputs: !isFormValid\n        });\n      } //validate phone form\n      //if all validated, save data!\n\n\n      if (this.state.isChecked & !this.state.coords & isFormValid) {\n        alert(\"saved!\" + this.state.data.email.value);\n      }\n\n      console.log(\"new address:\" + JSON.stringify(this.state.address)); //NEW: validate email format !!!\n\n      if (!this.handleValidation()) {} //call edit apis:\n\n\n      if (this.state.newHA == this.state.homeAddress) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"address\", this.state.newHA, \"home\");\n        this.setState({\n          homeAddress: this.state.newHA\n        });\n      } //mailing address\n\n\n      if (this.state.newMA == this.state.mailingAddress) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"address\", this.state.newMA, \"mailing\");\n        this.setState({\n          mailingAddress: this.state.newMA\n        });\n      } //other address\n\n\n      if (this.state.newOA == this.state.otherAddress) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"address\", this.state.newOA, \"other\");\n        this.setState({\n          otherAddress: this.state.newOA\n        });\n      } //cell phone\n\n\n      if (this.state.newCP == this.state.cellPhone) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"phone\", this.state.newCP, \"cell\");\n        this.setState({\n          cellPhone: this.state.newCP\n        });\n      } //home phone\n\n\n      if (this.state.newHP == this.state.homePhone) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"phone\", this.state.newHP, \"home\");\n        this.setState({\n          homePhone: this.state.newHP\n        });\n      } //email\n\n\n      if (this.state.newEmail == this.state.emailInfo) {} else {\n        userService.editContactInfo(this.ID, this.TOKEN, \"email\", this.state.newEmail, \"main\");\n        this.setState({\n          emailInfo: this.state.newEmail\n        });\n      }\n\n      this.setState({\n        isEditContact: false\n      });\n    } //alert messages\n\n  }, {\n    key: \"alert\",\n    value: function alert() {\n      if (!this.state.isChecked) {\n        return;\n      }\n\n      if (this.state.coords === null) {\n        return React.createElement(\"div\", {\n          className: \"\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }, \"Invalid.\"), \" The address is not recognized.\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, \"Valid Address.\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var result = this.alert();\n      var _this$state = this.state,\n          address = _this$state.address,\n          validated = _this$state.validated,\n          isEditContact = _this$state.isEditContact,\n          addressInfo = _this$state.addressInfo,\n          phoneInfo = _this$state.phoneInfo,\n          emailInfo = _this$state.emailInfo,\n          homeAddress = _this$state.homeAddress,\n          mailingAddress = _this$state.mailingAddress,\n          otherAddress = _this$state.otherAddress,\n          cellPhone = _this$state.cellPhone,\n          homePhone = _this$state.homePhone,\n          data = _this$state.data,\n          newHA = _this$state.newHA,\n          newMA = _this$state.newMA,\n          newOA = _this$state.newOA,\n          newCP = _this$state.newCP,\n          newHP = _this$state.newHP,\n          newEmail = _this$state.newEmail;\n      console.log(\"test MA :\" + JSON.stringify(this.state.errors));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, !isEditContact ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"Home Address: \"), addressInfo.map(function (a) {\n        return React.createElement(\"div\", {\n          class: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, a.type == \"home\" ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, \" \", a.address, \" \") : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Mailing Address: \"), addressInfo.map(function (a) {\n        return React.createElement(\"div\", {\n          class: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        }, a.type == \"mailing\" ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, a.address) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Other Address: \"), addressInfo.map(function (a) {\n        return React.createElement(\"div\", {\n          class: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, a.type == \"other\" ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }, a.address) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \"Cell Phone: \"), phoneInfo.map(function (p) {\n        return React.createElement(\"div\", {\n          class: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518\n          },\n          __self: this\n        }, p.type == \"cell\" ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }, p.number) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, \"Home Phone: \"), phoneInfo.map(function (p) {\n        return React.createElement(\"div\", {\n          class: \"inline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, p.type == \"home\" ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }, p.number) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"Email: \"), emailInfo), React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.editContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"Edit\")) : ///////////////////////////////////////EDIT ////////////////////////////////////////\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"Home Address:\"), \" \", React.createElement(\"input\", {\n        class: \"form-control\",\n        placeholder: \"home address\",\n        value: newHA || \"\",\n        onChange: this.handleHAChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"Mailing Address: \"), React.createElement(\"input\", {\n        class: \"form-control\",\n        placeholder: \"mailing address\",\n        value: newMA || \"\",\n        onChange: this.handleMAChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, \"Other Address: \"), \" \", React.createElement(\"input\", {\n        class: \"form-control\",\n        placeholder: \"other address\",\n        value: newOA || \"\",\n        onChange: this.handleOAChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"Cell Phone: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(ReactPhoneInput, {\n        placeholder: \"Enter phone number\",\n        defaultCountry: \"ca\",\n        value: newCP || \"\",\n        onChange: this.handlePhoneChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"Home Phone: \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(ReactPhoneInput, {\n        placeholder: \"Enter phone number\",\n        defaultCountry: \"ca\",\n        value: newHP || \"\",\n        onChange: this.handleHPChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Email:\"), \" \", React.createElement(\"input\", {\n        class: \"form-control\",\n        type: \"email\",\n        value: newEmail,\n        onChange: this.handleEChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, this.state.errors[\"email\"])), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.onCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.editCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return EditContact;\n}(React.Component);\n\nexport default EditContact;","map":{"version":3,"sources":["/Users/wenyanli/Desktop/MyPHR_Portal/src/components/Edit/editContact.js"],"names":["React","Component","userService","ButtonToolbar","Button","Form","InputGroup","Col","AddressForm","AddressSuggest","AddressInput","axios","Field","formInputData","formValidation","ReactPhoneInput","APP_ID_HERE","APP_CODE_HERE","clientToEdit","JSON","parse","localStorage","getItem","EditContact","props","context","TOKEN","token","ID","client_id","state","getInitialState","editContact","bind","editCancel","onQuery","onAddressChange","onCheck","onClear","handleChange","handlePhoneChange","handleOAChange","handleMAChange","handleHPChange","handleHAChange","handleEChange","address","street_number","city","postal_code","country","isLoading","client","ha","addressInfo","filter","word","type","length","setState","homeAddress","newHA","ma","mailingAddress","newMA","oa","otherAddress","newOA","cp","phoneInfo","cellPhone","country_code","number","newCP","hp","homePhone","newHP","newEmail","emailInfo","isEditContact","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","validated","query","target","value","self","get","params","app_id","app_code","maxresults","then","response","data","suggestions","id","locationId","evt","val","inputValue","inputName","validationState","isRequired","validation","formData","isFormValid","email","errors","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","e","view","Response","View","Result","location","Location","isChecked","Address","Label","street","HouseNumber","Street","City","State","postalCode","PostalCode","Country","coords","lat","DisplayPosition","Latitude","lon","Longitude","catch","error","console","log","callAPI","shouldValidateInputs","alert","stringify","handleValidation","editContactInfo","result","map","a","p"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport { userService } from \"../../service\";\nimport { ButtonToolbar, Button, Form, InputGroup, Col } from \"react-bootstrap\";\nimport AddressForm from \"../autoAddress/AddressForm\";\nimport AddressSuggest from \"../autoAddress/AddressSuggest\";\nimport AddressInput from \"../autoAddress/AddressInput\";\nimport axios from \"axios\";\nimport { Field, formInputData, formValidation } from \"reactjs-input-validator\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/dist/style.css\";\n\nconst APP_ID_HERE = \"Fz8mRRSVvIpzxV6B1qa1\";\nconst APP_CODE_HERE = \"miB6oUEV_kPBGp7CQTQTAg\";\n\nconst clientToEdit = JSON.parse(localStorage.getItem(\"contactInfo\"));\n/*edit components\n *auto complete addresses\n *phone number and email validators\n\n validate all forms when clicking save (before save)\n */\nclass EditContact extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = this.getInitialState();\n    this.editContact = this.editContact.bind(this);\n    this.editCancel = this.editCancel.bind(this);\n    // User has entered something in the address bar\n    this.onQuery = this.onQuery.bind(this);\n    // User has entered something in an address field\n    this.onAddressChange = this.onAddressChange.bind(this);\n    // User has clicked the save button\n    this.onCheck = this.onCheck.bind(this);\n    // User has clicked the clear button\n    this.onClear = this.onClear.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handleOAChange = this.handleOAChange.bind(this);\n    this.handleMAChange = this.handleMAChange.bind(this);\n    this.handleHPChange = this.handleHPChange.bind(this);\n    this.handleHAChange = this.handleHAChange.bind(this);\n\n    this.handleEChange = this.handleEChange.bind(this);\n  }\n  getInitialState() {\n    return {\n      address: {\n        street_number: \"\",\n        city: \"\",\n        state: \"\",\n        postal_code: \"\",\n        country: \"\"\n      },\n      isLoading: true,\n      client: {},\n      address: {},\n      isEditContact: false,\n      validated: false,\n      query: \"\",\n      locationId: \"\",\n      isChecked: false,\n      coords: {},\n      data: {},\n\n      //UPDATING........\n      phoneInfo: clientToEdit[1][1],\n      emailInfo: clientToEdit[2][1],\n      addressInfo: clientToEdit[0][1],\n      homeAddress: {},\n      mailingAddress: {},\n      otherAddress: {},\n      homePhone: {},\n      cellPhone: {},\n      newEmail: {},\n\n      //new input values:\n      newHA: {},\n      newMA: {},\n      newOA: {},\n      newHP: {},\n      newCP: {},\n\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    const ha = this.state.addressInfo.filter(word => word.type == \"home\");\n    if (ha.length != 0) {\n      this.setState({ homeAddress: ha[0].address, newHA: ha[0].address });\n    } else {\n      this.setState({ homeAddress: ha[0], newHA: ha[0] });\n    }\n\n    const ma = this.state.addressInfo.filter(word => word.type == \"mailing\");\n    if (ma.length != 0) {\n      this.setState({ mailingAddress: ma[0].address, newMA: ma[0].address });\n    } else {\n      this.setState({ mailingAddress: ma[0], newMA: ma[0] });\n    }\n\n    const oa = this.state.addressInfo.filter(word => word.type == \"other\");\n    if (oa.length != 0) {\n      this.setState({ otherAddress: oa[0].address, newOA: oa[0].address });\n    } else {\n      this.setState({ otherAddress: oa[0], newOA: oa[0] });\n    }\n\n    const cp = this.state.phoneInfo.filter(word => word.type == \"cell\");\n    if (cp.length != 0) {\n      this.setState({\n        cellPhone: \"+\" + cp[0].country_code + \" \" + cp[0].number,\n        newCP: \"+\" + cp[0].country_code + \" \" + cp[0].number\n      }); ///IF Differnet code????????\n    } else {\n      this.setState({ cellPhone: cp[0], newCP: cp[0] }); ///IF Differnet code????????\n    }\n\n    const hp = this.state.phoneInfo.filter(word => word.type == \"home\");\n    if (hp.length != 0) {\n      this.setState({\n        homePhone: \"+\" + hp[0].country_code + \" \" + hp[0].number,\n        newHP: \"+\" + hp[0].country_code + \" \" + hp[0].number\n      });\n    } else {\n      this.setState({ homePhone: hp[0], newHP: hp[0] });\n    }\n\n    this.setState({ newEmail: this.state.emailInfo });\n  }\n  editCancel() {\n    this.setState({\n      isEditContact: false\n    });\n  }\n\n  //disabled now\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState({ validated: true });\n  }\n\n  //Address Query\n  onQuery(event) {\n    const query = event.target.value;\n\n    if (!query.length > 0) {\n      this.setState(this.getInitialState());\n      return;\n    }\n\n    const self = this;\n    axios\n      .get(\"https://autocomplete.geocoder.api.here.com/6.2/suggest.json\", {\n        params: {\n          app_id: APP_ID_HERE,\n          app_code: APP_CODE_HERE,\n          query: query,\n          maxresults: 1\n        }\n      })\n      .then(function(response) {\n        if (response.data.suggestions.length > 0) {\n          const id = response.data.suggestions[0].locationId;\n          const address = response.data.suggestions[0].address;\n          self.setState({\n            address: address,\n            query: query,\n            locationId: id\n          });\n        } else {\n          const state = self.getInitialState();\n          self.setState(state);\n        }\n      });\n  }\n\n  editContact() {\n    this.setState({\n      isEditContact: true\n    });\n  }\n  //disabled now\n  onClear(evt) {\n    const state = this.getInitialState();\n    this.setState(state);\n  }\n\n  onAddressChange(evt) {\n    const id = evt.target.id;\n    const val = evt.target.value;\n\n    let state = this.state;\n    state.address[id] = val;\n    this.setState(state);\n  }\n\n  //handle email\n  handleChange(event, inputValue, inputName, validationState, isRequired) {\n    const value = (event && event.target.value) || inputValue;\n    const { data } = this.state;\n    data[inputName] = { value, validation: validationState, isRequired };\n    this.setState({\n      data\n    });\n    // if you want access to your form data\n    const formData = formInputData(this.state.data); // eslint-disable-line no-unused-vars\n    // tells you if the entire form validation is true or false\n    const isFormValid = formValidation(this.state.data); // eslint-disable-line no-unused-vars\n  }\n\n  //handle phone number change\n  handlePhoneChange(value) {\n    this.setState({\n      newCP: value\n    });\n  }\n  handleHPChange(value) {\n    this.setState({\n      newHP: value\n    });\n  }\n  //handle addresses change\n  handleHAChange(event) {\n    this.setState({ newHA: event.target.value });\n  }\n  handleMAChange(event) {\n    this.setState({ newMA: event.target.value });\n  }\n  handleOAChange(event) {\n    this.setState({ newOA: event.target.value });\n  }\n\n  handleValidation() {\n    let email = this.state.newEmail;\n\n    let errors = {};\n    let formIsValid = true;\n\n    //Email\n    if (!email) {\n      formIsValid = false;\n      errors[\"email\"] = \"Email cannot be empty\";\n    }\n\n    if (typeof email !== \"undefined\") {\n      let lastAtPos = email.lastIndexOf(\"@\");\n      let lastDotPos = email.lastIndexOf(\".\");\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          email.indexOf(\"@@\") == -1 &&\n          lastDotPos > 2 &&\n          email.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  handleEChange(e) {\n    this.setState({ newEmail: e.target.value });\n  }\n\n  TOKEN = JSON.parse(localStorage.getItem(\"oneUser\")).token;\n  ID = JSON.parse(localStorage.getItem(\"oneUser\")).client_id;\n  //when validation (clicking save button)\n  onCheck(event) {\n    let params = {\n      app_id: APP_ID_HERE,\n      app_code: APP_CODE_HERE\n    };\n\n    if (this.state.locationId.length > 0) {\n      params[\"locationId\"] = this.state.locationId;\n    } else {\n      params[\"searchtext\"] =\n        this.state.address.street_number +\n        this.state.address.city +\n        this.state.address.state +\n        this.state.address.postal_code +\n        this.state.address.country;\n    }\n\n    const self = this;\n    axios\n      .get(\"https://geocoder.api.here.com/6.2/geocode.json\", { params: params })\n      .then(function(response) {\n        const view = response.data.Response.View;\n        if (view.length > 0 && view[0].Result.length > 0) {\n          const location = view[0].Result[0].Location;\n\n          self.setState({\n            isChecked: \"true\",\n            locationId: \"\",\n            query: location.Address.Label,\n            address: {\n              street:\n                location.Address.HouseNumber + \" \" + location.Address.Street,\n              city: location.Address.City,\n              state: location.Address.State,\n              postalCode: location.Address.PostalCode,\n              country: location.Address.Country\n            },\n            coords: {\n              lat: location.DisplayPosition.Latitude,\n              lon: location.DisplayPosition.Longitude\n            }\n          });\n        } else {\n          self.setState({\n            isChecked: true,\n            coords: null\n          });\n        }\n      })\n      .catch(function(error) {\n        console.log(\"caught failed query\");\n        self.setState({\n          isChecked: true,\n          coords: null\n        });\n      });\n\n    //validate email form\n    event.preventDefault();\n    const isFormValid = formValidation(this.state.data);\n\n    if (isFormValid) {\n      // do anything including ajax calls\n      this.setState({ callAPI: true });\n    } else {\n      this.setState({ callAPI: true, shouldValidateInputs: !isFormValid });\n    }\n\n    //validate phone form\n\n    //if all validated, save data!\n    if (this.state.isChecked & !this.state.coords & isFormValid) {\n      alert(\"saved!\" + this.state.data.email.value);\n    }\n    console.log(\"new address:\" + JSON.stringify(this.state.address));\n\n    //NEW: validate email format !!!\n    if (!this.handleValidation()) {\n    }\n    //call edit apis:\n    if (this.state.newHA == this.state.homeAddress) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"address\",\n        this.state.newHA,\n        \"home\"\n      );\n      this.setState({ homeAddress: this.state.newHA });\n    }\n\n    //mailing address\n    if (this.state.newMA == this.state.mailingAddress) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"address\",\n        this.state.newMA,\n        \"mailing\"\n      );\n      this.setState({ mailingAddress: this.state.newMA });\n    }\n\n    //other address\n    if (this.state.newOA == this.state.otherAddress) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"address\",\n        this.state.newOA,\n        \"other\"\n      );\n      this.setState({ otherAddress: this.state.newOA });\n    }\n\n    //cell phone\n    if (this.state.newCP == this.state.cellPhone) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"phone\",\n        this.state.newCP,\n        \"cell\"\n      );\n      this.setState({ cellPhone: this.state.newCP });\n    }\n    //home phone\n    if (this.state.newHP == this.state.homePhone) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"phone\",\n        this.state.newHP,\n        \"home\"\n      );\n      this.setState({ homePhone: this.state.newHP });\n    }\n\n    //email\n    if (this.state.newEmail == this.state.emailInfo) {\n    } else {\n      userService.editContactInfo(\n        this.ID,\n        this.TOKEN,\n        \"email\",\n        this.state.newEmail,\n        \"main\"\n      );\n      this.setState({ emailInfo: this.state.newEmail });\n    }\n\n    this.setState({ isEditContact: false });\n  }\n\n  //alert messages\n  alert() {\n    if (!this.state.isChecked) {\n      return;\n    }\n\n    if (this.state.coords === null) {\n      return (\n        <div className=\"\" role=\"alert\">\n          <b>Invalid.</b> The address is not recognized.\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"\" role=\"alert\">\n          <b>Valid Address.</b>\n        </div>\n      );\n    }\n  }\n  render() {\n    let result = this.alert();\n    const {\n      address,\n      validated,\n\n      isEditContact,\n      addressInfo,\n      phoneInfo,\n      emailInfo,\n\n      homeAddress,\n      mailingAddress,\n      otherAddress,\n      cellPhone,\n      homePhone,\n\n      data,\n      newHA,\n      newMA,\n      newOA,\n      newCP,\n      newHP,\n      newEmail\n    } = this.state;\n\n    console.log(\"test MA :\" + JSON.stringify(this.state.errors));\n    return (\n      <div>\n        {!isEditContact ? (\n          <div>\n            <p>\n              <strong>Home Address: </strong>\n              {addressInfo.map(a => (\n                <div class=\"inline\">\n                  {a.type == \"home\" ? <div> {a.address} </div> : <div />}\n                </div>\n              ))}\n            </p>\n\n            <p>\n              <strong>Mailing Address: </strong>\n\n              {addressInfo.map(a => (\n                <div class=\"inline\">\n                  {a.type == \"mailing\" ? <div>{a.address}</div> : <div />}\n                </div>\n              ))}\n            </p>\n            <p>\n              <strong>Other Address: </strong>\n              {addressInfo.map(a => (\n                <div class=\"inline\">\n                  {a.type == \"other\" ? <div>{a.address}</div> : <div />}\n                </div>\n              ))}\n            </p>\n            <p>\n              <strong>Cell Phone: </strong>\n              {phoneInfo.map(p => (\n                <div class=\"inline\">\n                  {p.type == \"cell\" ? <div>{p.number}</div> : <div />}\n                </div>\n              ))}\n            </p>\n            <p>\n              <strong>Home Phone: </strong>\n              {phoneInfo.map(p => (\n                <div class=\"inline\">\n                  {p.type == \"home\" ? <div>{p.number}</div> : <div />}\n                </div>\n              ))}\n            </p>\n            <p>\n              <strong>Email: </strong>\n              {emailInfo}\n            </p>\n\n            <Button variant=\"secondary\" onClick={this.editContact}>\n              Edit\n            </Button>\n          </div>\n        ) : (\n          ///////////////////////////////////////EDIT ////////////////////////////////////////\n          <div>\n            <p>\n              <strong>Home Address:</strong>{\" \"}\n              <input\n                class=\"form-control\"\n                placeholder=\"home address\"\n                value={newHA || \"\"}\n                onChange={this.handleHAChange}\n              />\n              {/**\n\n                <AddressSuggest\n                  query={this.state.query}\n                  value={address.street_number}\n                  onChange={this.onQuery}\n                  placeholder={address.street_number}\n                />\n                <input placeholder=\"city\" value={address.city} /> ,{\" \"}\n                <input placeholder=\"country\" value={address.country} />,{\" \"}\n                <input placeholder=\"postal code\" value={address.postalCode} />\n                \n          <AddressInput\n            street={this.state.address.street}\n            city={this.state.address.city}\n            state={this.state.address.state}\n            postalCode={this.state.address.postalCode}\n            country={this.state.address.country}\n            onChange={this.onAddressChange}\n          />\n           <br />\n                {result}*/}\n            </p>\n\n            <p>\n              <strong>Mailing Address: </strong>\n              <input\n                class=\"form-control\"\n                placeholder=\"mailing address\"\n                value={newMA || \"\"}\n                onChange={this.handleMAChange}\n              />\n            </p>\n            <p>\n              <strong>Other Address: </strong>{\" \"}\n              <input\n                class=\"form-control\"\n                placeholder=\"other address\"\n                value={newOA || \"\"}\n                onChange={this.handleOAChange}\n              />\n            </p>\n            <p>\n              <strong>Cell Phone: </strong>\n              <div>\n                <ReactPhoneInput\n                  placeholder=\"Enter phone number\"\n                  defaultCountry={\"ca\"}\n                  value={newCP || \"\"}\n                  onChange={this.handlePhoneChange}\n                />\n              </div>\n            </p>\n\n            <p>\n              <strong>Home Phone: </strong>\n              <div>\n                <ReactPhoneInput\n                  placeholder=\"Enter phone number\"\n                  defaultCountry={\"ca\"}\n                  value={newHP || \"\"}\n                  onChange={this.handleHPChange}\n                />\n              </div>\n            </p>\n\n            <p>\n              <p>\n                <strong>Email:</strong>{\" \"}\n                <input\n                  class=\"form-control\"\n                  type=\"email\"\n                  value={newEmail}\n                  onChange={this.handleEChange}\n                />\n                <span className=\"error\">{this.state.errors[\"email\"]}</span>\n              </p>\n              <ButtonToolbar>\n                <Button variant=\"secondary\" onClick={this.onCheck}>\n                  Save\n                </Button>\n                <Button variant=\"secondary\" onClick={this.editCancel}>\n                  Cancel\n                </Button>\n              </ButtonToolbar>\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}